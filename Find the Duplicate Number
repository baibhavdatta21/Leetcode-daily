int findDuplicate(vector<int>& nums)
    {
        map<int,int>mp;
        for(int i=0;i<nums.size();i++)
        mp[nums[i]]++;
        for(auto it:mp)
        {
            if(it.second>1)
            return it.first;
        }
        return -1;
    }*/
    int findDuplicate(vector<int>& nums)
    {
        int slow=nums[0];
        int fast=nums[0];
        
        do
        {
            fast=nums[nums[fast]];
            slow=nums[slow];
        }while(fast!=slow);
        cout<<slow<<endl;
        fast=nums[0];
        while(fast!=slow)
        {
            fast=nums[fast];
            slow=nums[slow];
            cout<<fast<<" "<<slow<<endl;
        }
        return slow;
        
    }
